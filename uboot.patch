diff --git a/configs/mx6cuboxi_defconfig b/configs/mx6cuboxi_defconfig
index 6c08e1d88e..f222c3a1a5 100644
--- a/configs/mx6cuboxi_defconfig
+++ b/configs/mx6cuboxi_defconfig
@@ -4,7 +4,9 @@ CONFIG_SPL_GPIO_SUPPORT=y
 CONFIG_SPL_LIBCOMMON_SUPPORT=y
 CONFIG_SPL_LIBGENERIC_SUPPORT=y
 CONFIG_TARGET_MX6CUBOXI=y
-CONFIG_SPL_BOOT_DEVICE_MMC=y
+CONFIG_SPL_BOOT_DEVICE_SDHC=y
+# CONFIG_SPL_BOOT_DEVICE_MMC=y
+# CONFIG_SPL_BOOT_DEVICE_MMC=y
 CONFIG_SPL_MMC_SUPPORT=y
 CONFIG_SPL_SERIAL_SUPPORT=y
 CONFIG_SPL_LIBDISK_SUPPORT=y
@@ -22,7 +24,8 @@ CONFIG_SPL_DOS_PARTITION=y
 CONFIG_CMD_HDMIDETECT=y
 CONFIG_DISTRO_DEFAULTS=y
 CONFIG_SYS_EXTRA_OPTIONS="IMX_CONFIG=arch/arm/mach-imx/spl_sd.cfg"
-CONFIG_BOOTCOMMAND="run findfdt; run finduuid; run distro_bootcmd"
+# CONFIG_BOOTCOMMAND="run findfdt; run finduuid; run distro_bootcmd"
+CONFIG_BOOTCOMMAND="for mmcdev in ${mmcdevs}; do mmc dev ${mmcdev}; if mmc rescan; then run snappy_boot; fi; done; run netboot;"
 # CONFIG_SYS_STDIO_DEREGISTER is not set
 CONFIG_BOARD_EARLY_INIT_F=y
 CONFIG_SPL=y
@@ -37,6 +40,15 @@ CONFIG_CMD_CACHE=y
 CONFIG_CMD_EXT4_WRITE=y
 # CONFIG_SPL_PARTITION_UUIDS is not set
 CONFIG_ENV_IS_IN_MMC=y
+# CONFIG_ENV_IS_IN_FAT=y
+# CONFIG_FAT_WRITE=y
+# FAT_ENV_INTERFACE="mmc"
+# FAT_ENV_DEVICE_AND_PART="0:1"
+# FAT_ENV_FILE="uboot.env"
+CONFIG_SYS_REDUNDAND_ENVIRONMENT=y
+# CONFIG_SYS_MMC_ENV_DEV=0
+# CONFIG_SYS_MMC_ENV_PART=1
+CONFIG_DEFAULT_FDT_FILE="imx6q-cubox-i-som-v15.dtb"
 CONFIG_DM=y
 CONFIG_DWC_AHSATA=y
 CONFIG_PHYLIB=y
diff --git a/include/configs/mx6cuboxi.h b/include/configs/mx6cuboxi.h
index 5e1fe5e760..5b58d07fd5 100644
--- a/include/configs/mx6cuboxi.h
+++ b/include/configs/mx6cuboxi.h
@@ -135,6 +135,25 @@
 			"setenv fdtfile ${fdtprefix}-cubox-i${emmcsuffix}${fdtsuffix}.dtb; fi; " \
 		"if test ${fdtfile} = undefined; then " \
 			"echo WARNING: Could not determine dtb to use; fi; \0" \
+	"fdt_file=imx6q-cubox-i-som-v15.dtb\0" \
+	"snap_core=core18\0" \
+	"snapkernel=pc-kernel_254.snap\0" \
+	"kernel_file=kernel.img\0" \
+	"initrd_file=initrd.img\0" \
+	"mmcdevs=0 1\0" \
+	"mmcpart=1\0" \
+	"mmcroot=/dev/mmcblk0p2 rootwait rw\0" \
+	"mmcargs=setenv bootargs console=${console} console=tty0 root=${mmcroot}\0" \
+	"netboot=echo Booting from net ...; run netargs; if test ${ip_dyn} = yes; then setenv get_cmd dhcp; else setenv get_cmd tftp; fi; ${get_cmd} ${uimage}; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if ${get_cmd} ${fdt_addr} ${fdt_file}; then bootm ${loadaddr} - ${fdt_addr}; else if test ${boot_fdt} = try; then bootm; else echo WARN: Cannot load the DT; fi; fi; else bootm; fi;\0" \
+	"netargs=setenv bootargs console=${console},${baudrate} root=/dev/nfs ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0" \
+	"initrd_addr=0x13000000\0" \
+	"snappy_boot=if test ${snap_mode} = try; then setenv snap_mode trying; saveenv; if test ${snap_try_core} != \"\"; then setenv snap_core ${snap_try_core}; fi; if test ${snap_try_kernel} != \"\"; then setenv snap_kernel ${snap_try_kernel}; fi; elif test ${snap_mode} = trying; then setenv snap_mode \"\"; saveenv; fi; run loadfiles; setenv mmcroot /dev/disk/by-label/writable ${snappy_cmdline} snap_core=${snap_core} snap_kernel=${snapkernel}; run mmcargs; bootz ${loadaddr} ${initrd_addr}:${initrd_size} ${fdt_addr}\0" \
+	"loadfdt=load mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}\0" \
+	"loadfiles=run loadkernel; run loadinitrd; run loadfdt\0" \
+	"loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}\0" \
+	"loadinitrd=load mmc ${mmcdev}:${mmcpart} ${initrd_addr} ${snapkernel}/${initrd_file}; setenv initrd_size ${filesize}\0" \
+	"loadkernel=load mmc ${mmcdev}:${mmcpart} ${loadaddr} ${snapkernel}/${kernel_file}\0" \
+	"snappy_cmdline=rng_core.default_quality=700 net.ifnames=0 init=/lib/systemd/systemd ro panic=-1 fixrtc\0" \
 	BOOTENV
 
 #ifdef CONFIG_CMD_MMC
@@ -205,7 +224,7 @@
 
 #ifdef CONFIG_ENV_IS_IN_MMC
 #ifdef CONFIG_SPL_BOOT_DEVICE_MMC
-#define CONFIG_SYS_MMC_ENV_DEV		1
+#define CONFIG_SYS_MMC_ENV_DEV		0
 #define CONFIG_SYS_MMC_ENV_PART		1
 #else
 #define CONFIG_SYS_MMC_ENV_DEV		0
